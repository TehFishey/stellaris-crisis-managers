namespace = crisis

##############################################
##############################################
#####									#####
#####	Crisis Events 3: Contingency	#####
#####									#####
#####	Ghost Signal Events			 #####
#####	Replaced by Crisis Manager	  #####
#####									#####
##############################################
##############################################

#####################
###  Spot Events  ###
#####################

### The Arrival
country_event = {
	id = crisis.2022
	title = crisis.2022.name
	desc = {
		trigger = { NOT = { is_machine_empire = yes } }
		text = crisis.2022.desc
	}
	desc = {
		trigger = { is_machine_empire = yes }
		text = crisis.2022.desc.b
	}
	picture = GFX_evt_machine_sapience
	show_sound = event_ai_started
	trackable = yes
	is_triggered_only = yes

	immediate = {
		set_global_flag = ghost_signal_5_flag

		observer_event = { id = observer.44 }
		end_event_chain = ghost_signal_chain
		begin_event_chain = { event_chain = ai_crisis_chain target = root }

		### Ghost Signal for POPs
		if = {
			limit = { is_machine_empire = yes }
			add_notification_modifier = ghost_signal_5_machine
			if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 1 } } }
				every_owned_pop = {
					limit = { has_trait = trait_machine_unit }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_5a }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 2 } } }
				every_owned_pop = {
					limit = { has_trait = trait_machine_unit }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_5b }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 4 } } }
				every_owned_pop = {
					limit = { has_trait = trait_machine_unit }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_5d }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 5 } } }
				every_owned_pop = {
					limit = { has_trait = trait_machine_unit }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_5e }
				}
			} else = {
				every_owned_pop = {
					limit = { has_trait = trait_machine_unit }
					add_modifier = { modifier = pop_ghost_signal_5_machine }
				}
			}
		} else = {
			add_notification_modifier = ghost_signal_5
			if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 1 } } }
				every_owned_pop = {
					limit = { CmtTriggerGhostTargetPop = yes }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_5a }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 2 } } }
				every_owned_pop = {
					limit = { CmtTriggerGhostTargetPop = yes }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_5b }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 4 } } }
				every_owned_pop = {
					limit = { CmtTriggerGhostTargetPop = yes }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_5d }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 5 } } }
				every_owned_pop = {
					limit = { CmtTriggerGhostTargetPop = yes }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_5e }
				}
			} else = {
				every_owned_pop = {
					limit = { CmtTriggerGhostTargetPop = yes }
					add_modifier = { modifier = pop_ghost_signal_5 }
				}
			}
		}

		if = {
			limit = {
				is_synthetic_empire = yes
			}
			enable_special_project = {
				name = "AI_CRISIS_PROJECT"
				location = capital_scope
				owner = root
			}
		}
		### Ghost Signal for Ships
		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 1 } } }
			every_owned_fleet = {
				limit = { is_civilian = no }
				every_owned_ship = {
				limit = { has_sapient_combat_computer = yes }
					add_modifier = { modifier = CmtModifierCombatShipGhostSignal_5a }
				}
			}
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 2 } } }
			every_owned_fleet = {
				limit = { is_civilian = no }
				every_owned_ship = {
				limit = { has_sapient_combat_computer = yes }
					add_modifier = { modifier = CmtModifierCombatShipGhostSignal_5b }
				}
			}
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 4 } } }
			every_owned_fleet = {
				limit = { is_civilian = no }
				every_owned_ship = {
				limit = { has_sapient_combat_computer = yes }
					add_modifier = { modifier = CmtModifierCombatShipGhostSignal_5d }
				}
			}
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 5 } } }
			every_owned_fleet = {
				limit = { is_civilian = no }
				every_owned_ship = {
				limit = { has_sapient_combat_computer = yes }
					add_modifier = { modifier = CmtModifierCombatShipGhostSignal_5e }
				}
			}
		} else = {
			every_owned_fleet = {
				limit = { is_civilian = no }
				every_owned_ship = {
				limit = { has_sapient_combat_computer = yes }
					add_modifier = { modifier = ship_ghost_signal_5 }
				}
			}
		}
		if = {
			limit = { any_owned_ship = { has_sapient_combat_computer = yes } }
			country_event = { id = crisis.2099 days = 10 }
		}
	}

	option = {
		name = ONSCREEN
		if = {
			limit = {
				is_synthetic_empire = yes
			}
			if = {
				limit = { has_technology = tech_decryption_3 }
				custom_tooltip = tooltip_synth_crisis_encryption_bonus
			}
			tooltip = {
				enable_special_project = {
					name = AI_CRISIS_PROJECT
					location = capital_scope
					owner = root
				}
			}
		}
		hidden_effect = { country_event = { id = crisis.2023 } }
	}
}

### Only for vanilla fix
# Final Machine World (HIDDEN)
country_event = {
	id = crisis.2035
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		random_rim_system = {
			limit = { NOT = { has_star_flag = sealed_system } }
			spawn_system = {
				min_distance >= 15
				max_distance <= 35
				initializer = "ai_system_05"
			}
		}
		random_system = {
			limit = { has_star_flag = AI_lair }
			save_event_target_as = AI_lair
			random_system_planet = {
				limit = { has_planet_flag = machine_lair }
				create_fleet = {
					name = "NAME_AI_Final_Core"
					effect = {
						set_owner = event_target:AI_crisis
						create_ship = {
							name = random
							design = "NAME_AI_Final_Core"
							graphical_culture = "ai_01"
						}
						set_location = {
							target = prev
							distance = 10
							angle = random
						}
						save_event_target_as = final_core
					}
				}
				create_fleet = {
					name = "NAME_AI_Core"
					effect = {
						set_owner = event_target:AI_crisis
						create_ship = {
							name = random
							design = "NAME_AI_Core"
							graphical_culture = "ai_01"
						}
						set_location = {
							target = event_target:final_core
							distance = 17
							angle = 0
						}
					}
				}
				create_fleet = {
					name = "NAME_AI_Core"
					effect = {
						set_owner = event_target:AI_crisis
						create_ship = {
							name = random
							design = "NAME_AI_Core"
							graphical_culture = "ai_01"
						}
						set_location = {
							target = event_target:final_core
							distance = 17
							angle = 90
						}
					}
				}
				create_fleet = {
					name = "NAME_AI_Core"
					effect = {
						set_owner = event_target:AI_crisis
						create_ship = {
							name = random
							design = "NAME_AI_Core"
							graphical_culture = "ai_01"
						}
						set_location = {
							target = event_target:final_core
							distance = 17
							angle = 180
						}
					}
				}
				create_fleet = {
					name = "NAME_AI_Core"
					effect = {
						set_owner = event_target:AI_crisis
						create_ship = {
							name = random
							design = "NAME_AI_Core"
							graphical_culture = "ai_01"
						}
						set_location = {
							target = event_target:final_core
							distance = 17
							angle = 270
						}
					}
				}
			}
			if = {
				limit = { exists = starbase }
				starbase = {
					fleet = {
						destroy_fleet = this
					}
				}
			}
			create_contingency_starbase = yes
			star = {
				create_ambient_object = {
					type = "contingency_2"
					location = this
				}
				last_created_ambient_object = {
					set_ambient_object_flag = contingency_system_effect_2
					set_location = {
						target = prev
						distance = 0
						angle = random
					}
				}
			}
		}
		observer_event = { id = observer.49 }
		every_playable_country = {
			limit = { is_ai = no }
			country_event = { id = crisis.2036 }
			country_event = { id = crisis.2039 days = 5 }
		}
		every_playable_country = {
			limit = { has_event_chain = "ai_crisis_chain" }
			add_event_chain_counter = {
				event_chain = "ai_crisis_chain"
				counter = "active_machine_worlds"
				amount = 1
			}
		}
	}
}

### Machine World Destroyed
planet_event = {
	id = crisis.2040
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_planet_class = pc_ai
		NOT = { has_planet_flag = machine_lair }
		OR = { # Cracked or bombarded to death.
			from = { is_same_value = root }
			planet_devastation > 90		## 2.2.4.beta: >=50
			has_planet_flag = destroyed_by_colossus
			has_planet_flag = planet_cracked
			has_planet_flag = planet_shielded
			has_planet_flag = planet_godrayed
		}
	}

	immediate = {
		destroy_machine_world = yes
	}
}

### Final Machine World Destroyed
planet_event = {
	id = crisis.2046
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		set_global_flag = ai_invasion_defeated
		remove_global_flag = synth_terror
		remove_global_flag = ai_ghost_signal
		remove_global_flag = ai_invasion_ongoing
		solar_system = {
			random_system_ambient_object = {
				limit = { has_ambient_object_flag = contingency_system_effect_2 }
				destroy_ambient_object = this
			}
		}
		if = {
			limit = {
				OR = {
					NOT = { has_planet_flag = destroyed_by_colossus }
					has_planet_flag = planet_godrayed
				}
			}
			destroy_colony = yes
			change_pc = pc_broken
			reset_planet = yes
		}
		if = {
			limit = { exists = event_target:final_machine_world_destroyer }
			event_target:final_machine_world_destroyer = {
				set_country_flag = does_not_compute
				set_country_flag = final_machine_world_destroyed
			}
			if = {
				limit = { event_target:final_machine_world_destroyer = { is_ai = no } }
				event_target:final_machine_world_destroyer = { save_event_target_as = final_machine_world_player_destroyer }
			} else_if = {
				limit = {
					any_playable_country = {
						is_ai = no
						has_country_flag = does_not_compute
					}
				}
				random_playable_country = {
					limit = {
						is_ai = no
						has_country_flag = does_not_compute
					}
					save_event_target_as = final_machine_world_player_destroyer
				}
			}
		}
		if = {
			limit = {
				exists = event_target:final_machine_world_player_destroyer
				NOT = { has_planet_flag = planet_shielded }
			}
			if = {
				limit = { NOT = { has_planet_flag = planet_shielded } }
				event_target:final_machine_world_player_destroyer = {
					country_event = { id = crisis.2480 days = 10 random = 10 }
				}
			} else_if = {
				limit = { has_planet_flag = planet_shielded }
				event_target:final_machine_world_player_destroyer = {
					country_event = { id = crisis.2481 days = 10 random = 10 }
				}
			}
		}

		CmtEffectClearGhostSignalGalaxy = yes

		every_playable_country = {
			limit = { has_event_chain = "ai_crisis_chain" }
			end_event_chain = "ai_crisis_chain"
		}
		every_playable_country = {
			limit = { has_special_project = SYNTH_INFILTRATION_PROJECT }
			abort_special_project = { type = SYNTH_INFILTRATION_PROJECT }
		}
		every_country = {
			limit = { has_modifier = unity_reduction_crisis_2204 }
			remove_modifier = unity_reduction_crisis_2204
		}
		every_country = {
			limit = { merg_is_standard_empire = yes }
			country_event = { id = crisis.2038 }
			every_owned_planet = {
				limit = { has_modifier = synth_planet_paranoia }
				remove_modifier = synth_planet_paranoia
			}
		}
		observer_event = { id = observer.51 }

		# Destroy the Contingency
		event_target:AI_crisis = {
			destroy_country = yes
			### 2.2.4: should end their purges too
		}
		end_crisis = yes

		### Fallen Machine Empire & Cybrex
		every_country = {
			limit = { is_fallen_machine_empire = yes exists = event_target:final_machine_world_player_destroyer }
			country_event = { id = fallen_machine_empire.3 days = 1 }
		}
		# Cybrex
		if = {
			limit = {
				has_global_flag = cybrex_resurface
				NOT = { has_global_flag = cybrex_destroyed }
			}
			random_country = {
				limit = { is_country_type = cybrex_empire }
				every_country = {
					limit = { has_country_flag = cybrex_donation }
					country_event = { id = crisis.2474 days = 20 random = 30 }		## Cybrex recall expeditionary fleets
				}
				country_event = { id = crisis.2406 days = 365 random = 800 }		## Cybrex Depart Galaxy
			}
		}
	}
}

#########################
###  Ordinary Events  ###
#########################

### For New Synth
planet_event = {
	id = crisis.2055
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = ai_ghost_signal
		fromfrom = {
			has_trait = trait_mechanical
			owner = {
				CmtTriggerUnderGhostSignalCountry = yes
				NOT = { has_country_flag = synthetic_empire }
			}
		}
	}

	immediate = {
		fromfrom = {
			if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 1 } } }
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_5a }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_4a }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_3 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_3a }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_2 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_2a }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_1 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_1a }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 2 } } }
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_5b }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_4b }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_3 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_3b }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_2 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_2b }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_1 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_1b }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 4 } } }
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_5d }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_4d }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_3 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_3d }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_2 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_2d }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_1 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_1d }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 5 } } }
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_5e }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_4e }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_3 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_3e }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_2 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_2e }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_1 } }
					add_modifier = { modifier = CmtModifierOrganicPopGhostSignal_1e }
				}
			} else = {
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5 } }
					add_modifier = { modifier = pop_ghost_signal_5 }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4 } }
					add_modifier = { modifier = pop_ghost_signal_4 }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_3 } }
					add_modifier = { modifier = pop_ghost_signal_3 }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_2 } }
					add_modifier = { modifier = pop_ghost_signal_2 }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_1 } }
					add_modifier = { modifier = pop_ghost_signal_1 }
				}
			}
		}
	}
}

### For New ships
ship_event = {
	id = crisis.2056
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = ai_ghost_signal
		is_scope_valid = yes
		has_sapient_combat_computer = yes
		owner = { CmtTriggerUnderGhostSignalCountry = yes }
	}

	immediate = {
		if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 1 } } }
			if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_5
							has_notification_modifier = ghost_signal_5_machine
						}
					}
				}
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_5a }
			} else_if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_4
							has_notification_modifier = ghost_signal_4_machine
						}
					}
				}
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_4a }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_3 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_3a }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_2 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_2a }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_1 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_1a }
			}
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 2 } } }
			if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_5
							has_notification_modifier = ghost_signal_5_machine
						}
					}
				}
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_5b }
			} else_if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_4
							has_notification_modifier = ghost_signal_4_machine
						}
					}
				}
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_4b }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_3 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_3b }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_2 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_2b }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_1 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_1b }
			}
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 4 } } }
			if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_5
							has_notification_modifier = ghost_signal_5_machine
						}
					}
				}
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_5d }
			} else_if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_4
							has_notification_modifier = ghost_signal_4_machine
						}
					}
				}
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_4d }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_3 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_3d }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_2 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_2d }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_1 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_1d }
			}
		} else_if = {
			limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 5 } } }
			if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_5
							has_notification_modifier = ghost_signal_5_machine
						}
					}
				}
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_5e }
			} else_if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_4
							has_notification_modifier = ghost_signal_4_machine
						}
					}
				}
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_4e }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_3 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_3e }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_2 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_2e }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_1 } }
				add_modifier = { modifier = CmtModifierCombatShipGhostSignal_1e }
			}
		} else = {
			if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_5
							has_notification_modifier = ghost_signal_5_machine
						}
					}
				}
				add_modifier = { modifier = ship_ghost_signal_5 }
			} else_if = {
				limit = {
					owner = {
						OR = {
							has_notification_modifier = ghost_signal_4
							has_notification_modifier = ghost_signal_4_machine
						}
					}
				}
				add_modifier = { modifier = ship_ghost_signal_4 }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_3 } }
				add_modifier = { modifier = ship_ghost_signal_3 }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_2 } }
				add_modifier = { modifier = ship_ghost_signal_2 }
			} else_if = {
				limit = { owner = { has_notification_modifier = ghost_signal_1 } }
				add_modifier = { modifier = ship_ghost_signal_1 }
			}
		}
	}
}

### For Upgraded Ships
ship_event = {
	id = crisis.2057
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = ai_ghost_signal
		owner = { CmtTriggerUnderGhostSignalCountry = yes }
		OR = {
			has_sapient_combat_computer = yes
			has_modifier = ship_ghost_signal_5
			has_modifier = ship_ghost_signal_4
			has_modifier = ship_ghost_signal_3
			has_modifier = ship_ghost_signal_2
			has_modifier = ship_ghost_signal_1
			has_modifier = CmtModifierCombatShipGhostSignal_5a
			has_modifier = CmtModifierCombatShipGhostSignal_5b
			has_modifier = CmtModifierCombatShipGhostSignal_5d
			has_modifier = CmtModifierCombatShipGhostSignal_5e
			has_modifier = CmtModifierCombatShipGhostSignal_4a
			has_modifier = CmtModifierCombatShipGhostSignal_4b
			has_modifier = CmtModifierCombatShipGhostSignal_4d
			has_modifier = CmtModifierCombatShipGhostSignal_4e
			has_modifier = CmtModifierCombatShipGhostSignal_3a
			has_modifier = CmtModifierCombatShipGhostSignal_3b
			has_modifier = CmtModifierCombatShipGhostSignal_3d
			has_modifier = CmtModifierCombatShipGhostSignal_3e
			has_modifier = CmtModifierCombatShipGhostSignal_2a
			has_modifier = CmtModifierCombatShipGhostSignal_2b
			has_modifier = CmtModifierCombatShipGhostSignal_2d
			has_modifier = CmtModifierCombatShipGhostSignal_2e
			has_modifier = CmtModifierCombatShipGhostSignal_1a
			has_modifier = CmtModifierCombatShipGhostSignal_1b
			has_modifier = CmtModifierCombatShipGhostSignal_1d
			has_modifier = CmtModifierCombatShipGhostSignal_1e
		}
	}

	immediate = {
		remove_modifier = ship_ghost_signal_5
		remove_modifier = ship_ghost_signal_4
		remove_modifier = ship_ghost_signal_3
		remove_modifier = ship_ghost_signal_2
		remove_modifier = ship_ghost_signal_1
		remove_modifier = CmtModifierCombatShipGhostSignal_5a
		remove_modifier = CmtModifierCombatShipGhostSignal_5b
		remove_modifier = CmtModifierCombatShipGhostSignal_5d
		remove_modifier = CmtModifierCombatShipGhostSignal_5e
		remove_modifier = CmtModifierCombatShipGhostSignal_4a
		remove_modifier = CmtModifierCombatShipGhostSignal_4b
		remove_modifier = CmtModifierCombatShipGhostSignal_4d
		remove_modifier = CmtModifierCombatShipGhostSignal_4e
		remove_modifier = CmtModifierCombatShipGhostSignal_3a
		remove_modifier = CmtModifierCombatShipGhostSignal_3b
		remove_modifier = CmtModifierCombatShipGhostSignal_3d
		remove_modifier = CmtModifierCombatShipGhostSignal_3e
		remove_modifier = CmtModifierCombatShipGhostSignal_2a
		remove_modifier = CmtModifierCombatShipGhostSignal_2b
		remove_modifier = CmtModifierCombatShipGhostSignal_2d
		remove_modifier = CmtModifierCombatShipGhostSignal_2e
		remove_modifier = CmtModifierCombatShipGhostSignal_1a
		remove_modifier = CmtModifierCombatShipGhostSignal_1b
		remove_modifier = CmtModifierCombatShipGhostSignal_1d
		remove_modifier = CmtModifierCombatShipGhostSignal_1e

		ship_event = { id = crisis.2056 }		## Set Modifier if Ship Has Sapient CPU.
	}
}

### For New Machine Empire Pop.
planet_event = {
	id = crisis.2312
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = ai_ghost_signal
		fromfrom = {
			has_trait = trait_machine_unit
			owner = { CmtTriggerUnderGhostSignalCountry = yes }
		}
	}

	immediate = {
		fromfrom = {
			if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 1 } } }
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5_machine } }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_5a }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4_machine } }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_4a }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 2 } } }
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5_machine } }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_5b }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4_machine } }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_4b }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 4 } } }
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5_machine } }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_5d }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4_machine } }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_4d }
				}
			} else_if = {
				limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 5 } } }
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5_machine } }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_5e }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4_machine } }
					add_modifier = { modifier = CmtModifierMachinePopGhostSignal_4e }
				}
			} else = {
				if = {
					limit = { owner = { has_notification_modifier = ghost_signal_5_machine } }
					add_modifier = { modifier = pop_ghost_signal_5_machine }
				} else_if = {
					limit = { owner = { has_notification_modifier = ghost_signal_4_machine } }
					add_modifier = { modifier = pop_ghost_signal_4_machine }
				}
			}
		}
	}
}

### Machine Empire Special Project Finished.
country_event = {
	id = crisis.2510
	title = crisis.2510.name
	desc = crisis.2510.desc
	show_sound = event_alien_signal
	picture = GFX_evt_synth_sabotage
	is_triggered_only = yes

	immediate = {
		set_country_flag = ghost_signal_blocked
	}

	option = {
		name = EXCELLENT
		hidden_effect = {
			if = {
				limit = { has_notification_modifier = ghost_signal_5_machine }
				remove_notification_modifier = ghost_signal_5_machine
				if = {
					limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 1 } } }
					every_owned_pop = {
						limit = { has_modifier = CmtModifierMachinePopGhostSignal_5a }
						remove_modifier = CmtModifierMachinePopGhostSignal_5a
					}
				} else_if = {
					limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 2 } } }
					every_owned_pop = {
						limit = { has_modifier = CmtModifierMachinePopGhostSignal_5b }
						remove_modifier = CmtModifierMachinePopGhostSignal_5b
					}
				} else_if = {
					limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 4 } } }
					every_owned_pop = {
						limit = { has_modifier = CmtModifierMachinePopGhostSignal_5d }
						remove_modifier = CmtModifierMachinePopGhostSignal_5d
					}
				} else_if = {
					limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 5 } } }
					every_owned_pop = {
						limit = { has_modifier = CmtModifierMachinePopGhostSignal_5e }
						remove_modifier = CmtModifierMachinePopGhostSignal_5e
					}
				} else = {
					every_owned_pop = {
						limit = { has_modifier = pop_ghost_signal_5_machine }
						remove_modifier = pop_ghost_signal_5_machine
					}
				}
			} else_if = {
				limit = { has_notification_modifier = ghost_signal_4_machine }
				remove_notification_modifier = ghost_signal_4_machine
				if = {
					limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 1 } } }
					every_owned_pop = {
						limit = { has_modifier = CmtModifierMachinePopGhostSignal_4a }
						remove_modifier = CmtModifierMachinePopGhostSignal_4a
					}
				} else_if = {
					limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 2 } } }
					every_owned_pop = {
						limit = { has_modifier = CmtModifierMachinePopGhostSignal_4b }
						remove_modifier = CmtModifierMachinePopGhostSignal_4b
					}
				} else_if = {
					limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 4 } } }
					every_owned_pop = {
						limit = { has_modifier = CmtModifierMachinePopGhostSignal_4d }
						remove_modifier = CmtModifierMachinePopGhostSignal_4d
					}
				} else_if = {
					limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarGhostStrength value = 5 } } }
					every_owned_pop = {
						limit = { has_modifier = CmtModifierMachinePopGhostSignal_4e }
						remove_modifier = CmtModifierMachinePopGhostSignal_4e
					}
				} else = {
					every_owned_pop = {
						limit = { has_modifier = pop_ghost_signal_4_machine }
						remove_modifier = pop_ghost_signal_4_machine
					}
				}
			}
			if = {
				limit = { has_notification_modifier = ghost_signal_5 }
				remove_notification_modifier = ghost_signal_5
			}
			every_owned_pop = {
				limit = { has_modifier = pop_ghost_signal_5 }
				remove_modifier = pop_ghost_signal_5
			}
		}
	}
}
