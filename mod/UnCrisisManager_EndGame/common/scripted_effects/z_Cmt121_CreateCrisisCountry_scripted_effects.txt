
######################################################
######################################################
#####											#####
#####	Crisis Manager						  #####
#####											#####
#####	scripted_effects for Spawn Countries	#####
#####											#####
######################################################
######################################################

###################
###  Prethoryn  ###
###################

CmtEffectCreatePrethorynCountry = {
	create_species = {
		name = "NAME_Prethoryn"
		class = SWARM
		namelist = "Prethoryn"
		portrait = random
		traits = random
		immortal = yes
		effect = { save_global_event_target_as = prethoryn_species }
	}
	create_country = {
		name = "NAME_Prethoryn_Scourge"
		type = "swarm"
		species = event_target:prethoryn_species
		name_list = "Prethoryn"
		flag = {
			icon= {
				category = "special"
				file = "the_swarm.dds"
			}
			background= {
				category = "backgrounds"
				file = "new_dawn.dds"
			}
			colors={ "orange" "grey" "null" "null" }
		}
		effect = {
			save_global_event_target_as = prethoryn_vgrd
			save_global_event_target_as = prethoryn
			create_ship_design = { design = "NAME_Swarm_Transport" }
			add_ship_design = last_created_design
			create_ship_design = { design = "NAME_Swarm_Colonizer" }
			add_ship_design = last_created_design
			create_ship_design = { design = "NAME_Swarm_Constructor" }
			add_ship_design = last_created_design
			create_ship_design = { design = "NAME_Swarm_Starbase" }
			add_ship_design = last_created_design
		}
	}

	### Communications and Opinion Modifiers
	every_country = {
		limit = { is_default_or_fallen = yes }
		establish_communications_no_message = event_target:prethoryn
		add_opinion_modifier = {
			who = event_target:prethoryn
			modifier = opinion_swarm
		}
		event_target:prethoryn = {
			add_opinion_modifier = {
				who = prev
				modifier = opinion_prey
			}
		}
	}
}

###################
###  Sentinels  ###
###################

CmtEffectCallSentinel = {
	if = {
		limit = { CmtTriggerExistPrethoryn = yes }
		set_crisis_sound = swarm_crisis_ambient_stage_3
		set_crisis_stage_3 = yes
		random_country = {
			limit = { CmtTriggerIsPrethoryn = yes }
			save_event_target_as = swarm
		}
	}
	set_global_flag = sentinels_founded

	random_system = {
		limit = {
			NOR = {
				has_star_flag = sealed_system
				has_star_flag = lcluster
			}
			NAND = {
				exists = space_owner
				space_owner = { CmtTriggerIsPrethoryn = yes }
			}
		}
		spawn_system = {
			max_distance <= 35
			min_distance >= 15
			initializer = "sentinel_system"
		}
	}
	if = {
		limit = { any_country = { is_fallen_empire = yes } }
		set_global_flag = sentinel_fe_support
		random_country = {
			limit = { is_fallen_empire = yes }
			save_global_event_target_as = sentinel_fallen_empire
		}
		every_country = { limit = { is_default_or_fallen = yes } establish_communications = event_target:sentinel_fallen_empire }
	}
	every_playable_country = {
		limit = { is_ai = no }
		country_event = { id = crisis.51 days = 1 }
	}
	event_target:sentinel_alpha = {
		fleet_event = { id = crisis.60 }
		fleet_event = { id = crisis.60 days = 10 }
	}
	observer_event = { id = observer.31 }
}

##################
###  Aberrant  ###
##################

CmtEffectCallAberrant = {
	set_crisis_sound = extradimensional_crisis_ambient_stage_3
	set_crisis_stage_3 = yes
	set_global_flag = extradimensional_second_portal

	if = {
		limit = {
			OR = {
				has_global_flag = CmtFlagExdsChaserAnywhere
				CmtTriggerUnbiddenExpand = no
			}
		}
		random_system = {
			limit = {
				CmtTriggerSpawnableSystem = yes
				NAND  = {
					exists = owner
					owner = { is_country_type = extradimensional }
				}
				any_neighbor_system_euclidean = {
					exists = owner
					owner = { is_country_type = extradimensional }
				}
			}
			save_event_target_as = second_portal_system # CmtEffectCreateCountryAberrant = yes
		}
	} else = {
		event_target:extradimensionals = {
			random_system_within_border = {
				limit = { CmtTriggerSpawnableSystem = yes }
				save_event_target_as = second_portal_system # CmtEffectCreateCountryAberrant = yes
			}
		}
	}
	event_target:second_portal_system = {
		# CmtEffectCreateCountryAberrant
		set_star_flag = extradimensional_second_portal_system

		random_system_planet = {
			create_species = {
				name = "NAME_Aberrant"
				class = EXD
				namelist = "Extradimensional"
				portrait = exd2
				traits = random
				effect = { save_global_event_target_as = extradimensional_hunters_species }
			}
			create_country = {
				name = "NAME_Aberrant"
				type = "extradimensional_2"
				species = event_target:extradimensional_hunters_species
				name_list = "Extradimensional"
				flag = {
					icon= {
						category = "special"
						file = "extradimensional_02.dds"
					}
					background= {
						category = "backgrounds"
						file = "triangle_split.dds"
					}
					colors={ "brown" "orange" "null" "null" }
				}
				effect = {
					set_country_flag = aberrant
					create_ship_design = { design = "NAME_Void_Former" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Aberrant_Anchor" }
					add_ship_design = last_created_design

					set_graphical_culture = extra_dimensional_02
					save_global_event_target_as = extradimensionals2
					save_event_target_as = extradimensional_hunters
					establish_communications_no_message = event_target:portal_holder_1
					set_faction_hostility = {
						target = event_target:portal_holder_1
						set_hostile = no
					}
				}
			}
			event_target:extradimensionals2 = {
				create_fleet = {
					name = "NAME_Dimensional_Portal"
					effect = {
						set_owner = prev
						create_ship = {
							name = random
							design = "NAME_Aberrant_Portal"
							graphical_culture = "extra_dimensional_02"
							effect = { set_ship_flag = aberrant_portal }
						}
						set_location = {
							target = prevprev
							distance = 40
							angle = random
						}
						save_event_target_as = second_portal
						fleet_event = { id = crisis.1103 days = 1 } # Fleet Arrives
						fleet_event = { id = crisis.1103 days = 5 } # Fleet Arrives
						fleet_event = { id = crisis.1103 days = 15 } # Fleet Arrives
						fleet_event = { id = crisis.1103 days = 30 } # Fleet Arrives
						fleet_event = { id = crisis.1103 days = 45 } # Fleet Arrives
						fleet_event = { id = crisis.1103 days = 60 } # Fleet Arrives
						fleet_event = { id = crisis.1103 days = 150 } # Fleet Arrives
						fleet_event = { id = crisis.1103 days = 350 } # Fleet Arrives
						fleet_event = { id = crisis.1106 days = 20 } # Constructor Arrives
						fleet_event = { id = crisis.1106 days = 25 } # Constructor Arrives
						fleet_event = { id = crisis.1106 days = 90 } # Constructor Arrives
						fleet_event = { id = crisis.1106 days = 210 } # Constructor Arrives
						event_target:extradimensional_hunters = { country_event = { id = crisis.1260 days = 550 } } # Spawn Cycle starts
						# CmtEffectCreateAdmiralty_AberrantCapitalDefense = yes
					}
				}
				# CmtEffectCreateFleet_AberrantCapitalDefense
				CmtEffectCreateAdmiral_Aberrant = yes
				create_fleet = {
					effect = {
						set_owner = prev
						event_target:CmtGlobalVar = { set_variable = { which = CmtVarWhileControlShip value = CmtVarFleetPower_Aberrant } }
						prev = { CmtEffectResetLoop = yes }
						while = {
							limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarWhileControlShip value > 0.125 } } }
							event_target:CmtGlobalVar = { change_variable = { which = CmtVarWhileControlShip value = -0.25 } }

							while = { count = 11 CmtEffectCreateShip_Predator = yes }		## 45 -> 45
							while = { count =  7 CmtEffectCreateShip_Assassin = yes }		## 30 -> 30
							while = { count =  5 CmtEffectCreateShip_Huntress = yes }		## 21 -> 21

							prev = {
								CmtEffectProgressLoop4 = yes
								switch = {
									trigger = has_country_flag
									CmtFlagLoopA = { prev = { CmtEffectCreateShip_Predator = yes } }
									CmtFlagLoopB = { prev = { CmtEffectCreateShip_Assassin = yes } }
									CmtFlagLoopC = { prev = { CmtEffectCreateShip_Huntress = yes } }
									CmtFlagLoopZ = { prev = { CmtEffectCreateShip_Assassin = yes } }
								}
							}
						}
						CmtFleetSetAuxParam_ExdsCombat = yes
						assign_leader = last_created_leader
					}
				}
			}
		}
		CmtEffectDestroySystemStarbase = yes
		create_starbase = {
			size = starbase_exd
			owner = event_target:extradimensionals2
		}

		### 2.7 Create ambient audio (ToDo: Move to scripted effect)
		star = {
			create_ambient_object = {
				type = "extradimensional_2"
				location = this
			}
			last_created_ambient_object = {
				set_ambient_object_flag = extradimensional_system_effect_2
				set_location = {
					target = prev
					distance = 0
					angle = random
				}
			}
		}

		event_target:extradimensionals2 = {
			random_owned_fleet = { limit = { NOT = { is_ship_size = dimensional_portal_ed } } ship_event = { id = crisis.1280 } }
		}
	}

	CmtEffectFriendlyCrisis = yes

	every_country = {
		limit = { is_default_or_fallen = yes }
		country_event = { id = crisis.1110 days = 1 }
	}
	random_country = {
		limit = { is_country_type = extradimensional_2 }
		establish_communications_no_message = event_target:extradimensionals
	}
	observer_event = { id = observer.36 }

	### For Controling Arrival of Vehement.
	set_timed_global_flag = { flag = CmtFlagAberrantFirstDecade years = 10 }
	set_timed_global_flag = { flag = CmtFlagAberrantFirstTwoDecades years = 20 }
	if = {
		limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarExdsChaserCondition value = 6 } } }
		event_target:extradimensionals2 = { country_event = { id = crisis.1200 days = 10 random = 5 } }
	}
}

# Transcluded in v.3.9
## Scope: this = Stellar System
# CmtEffectCreateCountryAberrant = {
# }

##################
###  Vehement  ###
##################

CmtEffectCallVehement = {
	set_global_flag = extradimensional_third_portal

	if = {
		limit = {
			OR = {
				has_global_flag = CmtFlagExdsChaserAnywhere
				CmtTriggerUnbiddenExpand = no
			}
		}
		random_system = {
			limit = {
				CmtTriggerSpawnableSystem = yes
				NAND  = {
					exists = owner
					owner = {
						OR = {
							is_country_type = extradimensional
							is_country_type = extradimensional_2
						}
					}
				}
				any_neighbor_system_euclidean = {
					exists = owner
					owner = {
						OR = {
							is_country_type = extradimensional
							is_country_type = extradimensional_2
						}
					}
				}
			}
			save_event_target_as = third_portal_system # CmtEffectCreateCountryVehement = yes
		}
	} else = {
		event_target:extradimensionals = {
			random_system_within_border = {
				limit = { CmtTriggerSpawnableSystem = yes }
				save_event_target_as = third_portal_system # CmtEffectCreateCountryVehement = yes
			}
		}
	}

	event_target:third_portal_system = {
		# CmtEffectCreateCountryVehement = {	## Scope = Stellar System
		set_star_flag = extradimensional_third_portal_system

		random_system_planet = {
			create_species = {
				name = "NAME_Vehement"
				class = EXD
				namelist = "Extradimensional"
				portrait = exd3
				traits = random
				effect = { save_global_event_target_as = extradimensional_trespassers_species }
			}
			create_country = {
				name = "NAME_Vehement"
				type = "extradimensional_3"
				species = event_target:extradimensional_trespassers_species
				name_list = "Extradimensional"
				flag = {
					icon= {
						category = "special"
						file = "extradimensional_03.dds"
					}
					background= {
						category = "backgrounds"
						file = "stripe.dds"
					}
					colors={ "green" "teal" "null" "null" }
				}
				effect = {
					set_country_flag = vehement
					create_ship_design = { design = "NAME_Void_Weaver" }
					add_ship_design = last_created_design
					create_ship_design = { design = "NAME_Vehement_Anchor" }
					add_ship_design = last_created_design

					set_graphical_culture = extra_dimensional_03
					save_global_event_target_as = extradimensionals3
					# save_event_target_as = extradimensional_trespassers # Vanilla bug not needed
					establish_communications_no_message = event_target:portal_holder_1
					set_faction_hostility = {
						target = event_target:portal_holder_1
						set_hostile = no
					}
				}
			}
			event_target:extradimensionals3 = {
				create_fleet = {
					name = "NAME_Dimensional_Portal"
					effect = {
						set_owner = prev
						create_ship = {
							name = random
							design = "NAME_Vehement_Portal"
							graphical_culture = "extra_dimensional_03"
							effect = { set_ship_flag = vehement_portal }
						}
						set_location = {
							target = prevprev
							distance = 40
							angle = random
						}
						save_event_target_as = third_portal
						fleet_event = { id = crisis.1203 days = 1 } # Fleet Arrives
						fleet_event = { id = crisis.1203 days = 5 } # Fleet Arrives
						fleet_event = { id = crisis.1203 days = 15 } # Fleet Arrives
						fleet_event = { id = crisis.1203 days = 30 } # Fleet Arrives
						fleet_event = { id = crisis.1203 days = 45 } # Fleet Arrives
						fleet_event = { id = crisis.1203 days = 60 } # Fleet Arrives
						fleet_event = { id = crisis.1203 days = 150 } # Fleet Arrives
						fleet_event = { id = crisis.1203 days = 350 } # Fleet Arrives
						fleet_event = { id = crisis.1206 days = 20 } # Constructor Arrives
						fleet_event = { id = crisis.1206 days = 25 } # Constructor Arrives
						fleet_event = { id = crisis.1206 days = 90 } # Constructor Arrives
						fleet_event = { id = crisis.1206 days = 210 } # Constructor Arrives
						prev = { country_event = { id = crisis.1260 days = 550 } } # Spawn Cycle starts
						# CmtEffectCreateAdmiralty_VehementCapitalDefense
					}
				}
				# CmtEffectCreateFleet_VehementCapitalDefense
				CmtEffectCreateAdmiral_Vehement = yes
				create_fleet = {
					effect = {
						set_owner = prev
						event_target:CmtGlobalVar = { set_variable = { which = CmtVarWhileControlShip value = CmtVarFleetPower_Vehement } }
						prev = { CmtEffectResetLoop = yes }
						while = {
							limit = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarWhileControlShip value > 0.125 } } }
							event_target:CmtGlobalVar = { change_variable = { which = CmtVarWhileControlShip value = -0.25 } }

							while = { count = 11 CmtEffectCreateShip_Obliterator = yes }		## 45 -> 45
							while = { count =  7 CmtEffectCreateShip_Annihilator = yes }		## 30 -> 30
							while = { count =  5 CmtEffectCreateShip_Eradicator = yes } 		## 21 -> 21

							prev = {
								CmtEffectProgressLoop4 = yes
								switch = {
									trigger = has_country_flag
									CmtFlagLoopA = { prev = { CmtEffectCreateShip_Obliterator = yes } }
									CmtFlagLoopB = { prev = { CmtEffectCreateShip_Annihilator = yes } }
									CmtFlagLoopC = { prev = { CmtEffectCreateShip_Eradicator = yes } }
									CmtFlagLoopZ = { prev = { CmtEffectCreateShip_Annihilator = yes } }
								}
							}
						}
						CmtFleetSetAuxParam_ExdsCombat = yes
						assign_leader = last_created_leader
					}
				}
			}
		}
		CmtEffectDestroySystemStarbase = yes
		create_starbase = {
			size = starbase_exd
			owner = event_target:extradimensionals3
		}

		### 2.7 Create ambient audio (ToDo: Move to scripted effect)
		star = {
			create_ambient_object = {
				type = "extradimensional_2"
				location = this
			}
			last_created_ambient_object = {
				set_ambient_object_flag = extradimensional_system_effect_2
				set_location = {
					target = prev
					distance = 0
					angle = random
				}
			}
		}

		event_target:extradimensionals3 = {
			random_owned_fleet = { limit = { NOT = { is_ship_size = dimensional_portal_ed } } ship_event = { id = crisis.1280 } }
		}
	}

	CmtEffectFriendlyCrisis = yes

	every_country = {
		limit = { is_default_or_fallen = yes }
		country_event = { id = crisis.1210 days = 1 }
	}
	every_country = {
		limit = {
			OR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
			}
		}
		establish_communications_no_message = event_target:extradimensionals3
	}
	observer_event = { id = observer.38 }
}

# Transcluded in v.3.9
# CmtEffectCreateCountryVehement =

################
###  Cybrex  ###
################
# crisis.2400
CmtEffectCallCybrex = {
	set_global_flag = cybrex_resurface
	remove_global_flag = cybrex_departed
	remove_global_flag = cybrex_destroyed
	random_rim_system = {
		limit = { NOT = { has_star_flag = sealed_system } }
		spawn_system = {
			min_distance >= 15
			max_distance <= 35
			initializer = "cybrex_beta"
		}
	}
	if = { limit = { NOT = { exists = event_target:cybrex } }
		random_country = {
			limit = { is_country_type = cybrex_empire }
			save_global_event_target_as = cybrex
		}
	}
	# Cybrex communication
	every_country = {
		limit = { is_country_type_with_subjects = yes }
		country_event = { id = crisis.2401 days = 2 }
	}
	observer_event = { id = observer.52 }
	random_country = {
		limit = { is_country_type = cybrex_empire }
		country_event = { id = crisis.2421 days = 4 }
		country_event = { id = crisis.2421 days = 120 }
		country_event = { id = crisis.2421 days = 320 }
		establish_communications_no_message = root
	}
	CmtEffectFriendlyCrisis = yes
}
