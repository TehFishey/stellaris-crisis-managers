
######################################################
######################################################
#####											#####
#####	Crisis Manager						  #####
#####											#####
#####	Scripted Trigger for End-Game Crises	#####
#####	Except Triggering Crises				#####
#####											#####
######################################################
######################################################

###################
###  Prethoryn  ###
###################

CmtTriggerPrethoryn1stTarget = {
	OR = {
		# No owner or neighbors
		NOR = {
			any_neighbor_system = { exists = space_owner }
			exists = space_owner
		}
		# Owned but not by fallen mpire.
		AND = {
			exists = space_owner
			space_owner = { is_fallen_empire = no }
		}
	}
	# No neighboring fallen empires
	NOR = {
		has_star_flag = crisis_spawn_exclude # v.3.8
		any_neighbor_system = {
			exists = space_owner
			space_owner = { is_fallen_empire = yes }
		}
	}
	# Not Captial of Other Crisis Country.
	CmtTriggerSpawnableSystem = yes
}

CmtTriggerFeralPrethorynSpawnableSystem = {
	NOR = {
		has_owner = yes
		is_capital_system = yes
		has_star_flag = feral_prethoryn_system
		has_star_flag = extradimensional_origin_system
		has_star_flag = extradimensional_second_portal_system
		has_star_flag = extradimensional_third_portal_system
		has_star_flag = AI_hub		## Machiene World 1-4, cf. planet_flag = machine_world_1
		has_star_flag = AI_lair		## Final MAchiene World, cf. Planet flag = machine_lair
	}
	any_system_planet = { has_planet_flag = previously_infested }
}

CmtTriggerPrethorynExpandedPsi = {
	OR = {
		has_global_flag = CmtFlagPrethorynUnlimitedFlavor
		owner_species = { has_trait = trait_psionic }
	}
	NOT = { owner_species = { has_trait = trait_hive_mind } }
}

CmtTriggerPrethorynExpandedHive = {
	OR = {
		has_global_flag = CmtFlagPrethorynUnlimitedFlavor
		owner_species = { has_trait = trait_hive_mind }
	}
	NOT = { owner_species = { has_trait = trait_psionic } }
}

CmtTriggerPrethorynUnconectableCountry = {
	NOR = {
		has_global_flag = CmtFlagPrethorynUnlimitedFlavor
		owner_species = {
			OR = {
				has_trait = trait_hive_mind
				has_trait = trait_psionic
			}
		}
	}
}

###########################
###  Extradimensionals  ###
###########################

### For Spawn Extradimensional Chaser
CmtTriggerUnbiddenExpand = {
	any_country = {
		is_country_type = extradimensional
		any_system_within_border = {
			CmtTriggerSpawnableSystem = yes
		}
	}
}

### Scope: this = country, Must synchronize with trigger of crisis.1267 in Total War Pack
CmtTriggerHasExdPortal = {
	OR = {
		AND = {
			is_country_type = extradimensional
			OR = {
				any_owned_ship = { has_ship_flag = unbidden_portal }
				any_country = {
					is_country_type = portal_holder
					any_owned_ship = { has_ship_flag = unbidden_portal }
				}
			}
		}
		AND = {
			is_country_type = extradimensional_2
			OR = {
				any_owned_ship = { has_ship_flag = aberrant_portal }
				any_country = {
					is_country_type = portal_holder
					any_owned_ship = { has_ship_flag = aberrant_portal }
				}
			}
		}
		AND = {
			is_country_type = extradimensional_3
			OR = {
				any_owned_ship = { has_ship_flag = vehement_portal }
				any_country = {
					is_country_type = portal_holder
					any_owned_ship = { has_ship_flag = vehement_portal }
				}
			}
		}
	}
}

# Transcluded in v.3.9
# CmtTriggerExistExdPortal = {
# CmtTriggerAnchorForPortalCreate = {		## this = Country (Exds)
# CmtTriggerAnchorForPortalDestroy = {		## this = Country (Exds)

#####################
###  Contingency  ###
#####################

### For Terror Events
CmtTriggerContingencyOrganicCountry = {
	NOT = { has_authority = auth_machine_intelligence }
	OR = {
		has_global_flag = CmtFlagSynthTerrorAll
		NOR = {
			has_authority = auth_hive_mind
			has_authority = auth_machine_intelligence
			owner_species = { has_trait = trait_psionic }
		}
	}
}

CmtTriggerRepeatableTerror = {
	event_target:CmtGlobalVar = {
		OR = {
			check_variable = { which = CmtVarFreqTerror value = 4 }
			check_variable = { which = CmtVarFreqTerror value = 5 }
		}
	}
}

CmtTriggerTerrorOrganicGlobal = {
	has_global_flag = synth_terror
}

CmtTriggerTerrorOrganicCountry = {
	CmtTriggerContingencyOrganicCountry = yes
	has_country_flag = synth_terror_country
	NOT = { has_country_flag = synth_detector }
}

CmtTriggerTerrorMachineGlobal = {
	has_global_flag = synth_terror
	OR = {
		has_global_flag = ghost_signal_5_flag
		has_global_flag = ghost_signal_4_flag
	}
}

CmtTriggerTerrorMachineCountry = {
	has_country_flag = post_arrival_events_machine
	has_authority = auth_machine_intelligence
	merg_is_default_empire = yes
	OR = {
		has_notification_modifier = ghost_signal_4_machine
		has_notification_modifier = ghost_signal_5_machine
	}
}

### Ghost Signal

CmtTriggerGhostTargetPop = {
	has_trait = trait_mechanical
	NAND = {
		owner = { has_country_flag = synthetic_empire }		## NOT Synthetically Ascended Empires
		is_same_species = owner_species
	}
}

CmtTriggerUnderGhostSignalCountry = {
	OR = {
		has_notification_modifier = ghost_signal_5
		has_notification_modifier = ghost_signal_4
		has_notification_modifier = ghost_signal_3
		has_notification_modifier = ghost_signal_2
		has_notification_modifier = ghost_signal_1
		has_notification_modifier = ghost_signal_5_machine
		has_notification_modifier = ghost_signal_4_machine
	}
}

#############################
###  Guardians of Galaxy  ###
#############################

CmtTriggerEmpireAwakenableGuardians = {
	is_country_type = fallen_empire
	OR = {
		AND = {
			has_ethic = ethic_fanatic_materialist
			NOT = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarDoubleGurdian value = 1.2 } } }
		}
		AND = {
			has_ethic = ethic_fanatic_xenophile
			NOT = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarDoubleGurdian value = 1.1 } } }
		}
	}
	OR = {
		event_target:CmtGlobalVar = { check_variable = { which = CmtVarGuardianWornOut value = 2 } }
		event_target:CmtGlobalVar = { check_variable = { which = CmtVarGuardianWornOut value = 3 } }
		fleet_power > 40000
	}
}

#################################
###  For Forced End of the Cycle  ###
#################################

### Trigger FEoC

CmtTriggerPotentialForcedEoc = {	## Used for Trigger Lottery (Modify 'Nothing')
	has_utopia = yes
	has_global_flag = CmtFlagAllowForcedEoc
}

CmtTriggerForbiddenForcedEoc = {	## Used for Trigger Lottery (Modify 'FEoc')
	OR = {
		CmtTriggerPotentialForcedEoc = no
		AND = {
			OR = {
				has_global_flag = end_of_the_cycle
				has_global_flag = end_of_the_cycle_complete
				has_global_flag = CmtFlagForcedEocTriggered
				NOT = { any_country = { CmtTriggerForcedEocTargetList = yes } }
			}
			NOT = { has_global_flag = CmtFlagDebugMode }
		}
	}
}

CmtTriggerAllowedManualForcedEoc = {
	has_utopia = yes
	NOR = {
		has_global_flag = end_of_the_cycle
		has_global_flag = end_of_the_cycle_complete
		has_global_flag = CmtFlagForcedEocTriggered
	}
	any_country = { CmtTriggerForcedEocTargetList = yes }
}

CmtTriggerForcedEocTargetList = {
	merg_is_default_empire = yes
	OR = {
		AND = {
			event_target:CmtGlobalVar = {
				NOR = {
					check_variable = { which = CmtVarForcedEocTargetPlayer value = 2 }
					check_variable = { which = CmtVarForcedEocTargetPlayer value = 3 }
				}
			}
			is_ai = yes
			NOT = { any_subject = { is_ai = no } }
		}
		event_target:CmtGlobalVar = { check_variable = { which = CmtVarForcedEocTargetPlayer value = 2 } }
		AND = {
			event_target:CmtGlobalVar = { check_variable = { which = CmtVarForcedEocTargetPlayer value = 3 } }
			OR = {
				is_ai = no
				any_subject = { is_ai = no }
			}
		}
	}
	OR = {
		NOT = { event_target:CmtGlobalVar = { check_variable = { which = CmtVarForcedEocTranscendence value = 1 } } }
		has_tradition = tr_psionics_psionic_assimilation
	}
}

### Select Exile: Checked before Reckoning Planets

CmtTriggerFeocExileCandidate = {
	has_owner = no
	is_colonizable = yes
	NOT = { has_modifier = covenant_shroud_marked }
}

# CmtTriggerFeocExile1stPrioritySystem = {
# 	OR = {
# 		NOT = { exists = starbase.owner }
# 		starbase.owner = { is_same_empire = root }
# 	}
# 	CmtTriggerFeocExile3rdPrioritySystem = yes
# }

# CmtTriggerFeocExile2ndPrioritySystem = {
# 	CmtTriggerFeocExile3rdPrioritySystem = yes
# 	NOT = { any_system_colony = {  } }
# }

CmtTriggerFeocExile3rdPrioritySystem = {
	any_system_planet = { CmtTriggerFeocExileCandidate = yes }
	NOT = { any_system_planet = { has_modifier = covenant_shroud_marked } }
}
