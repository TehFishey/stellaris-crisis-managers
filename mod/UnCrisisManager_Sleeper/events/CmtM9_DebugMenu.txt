namespace = CrisisManagerMenu
namespace = crisis

#####################################
#####################################
#####							#####
#####	Crisis Manager			#####
#####							#####
#####	For Only Debugging		#####
#####							#####
#####################################
#####################################

### Debug Menu
country_event = {
	id = CrisisManagerMenu.9000
	title = CrisisManagerMenu.9000.name
	desc = CrisisManagerMenu.9000.desc
	picture = GFX_evt_CmtMenuA
	is_triggered_only = yes

	## Variable Checker
	option = {
		name = CrisisManagerMenu.9000.9100.name
		trigger = { has_global_flag = CmtFlagDebugMode }
		country_event = { id = CrisisManagerMenu.9100 }
	}

	## Flag Controller
	option = {
		name = CrisisManagerMenu.9000.9200.name
		trigger = { has_global_flag = CmtFlagDebugMode }
		country_event = { id = CrisisManagerMenu.9200 }
	}

	## Separator
	option = {
		name = CmtTextSeparator.name
		custom_tooltip = CmtTextSeparator.tooltip
		trigger = { NOT = { has_global_flag = CmtFlagNoSeparator } }
		allow = { hidden_trigger = { always = no } }
	}

	## Count Triggered Crisis
	option = {
		name = CrisisManagerMenu.9000.9310.name
		trigger = { has_global_flag = CmtFlagDebugMode }
		country_event = { id = CrisisManagerMenu.9310 }
	}

	## Count Awakening of Sleeper
	option = {
		name = CrisisManagerMenu.9000.9320.name
		trigger = { has_global_flag = CmtFlagDebugMode }
		country_event = { id = CrisisManagerMenu.9320 }
	}

	## Count Ancient Rival
	option = {
		name = CrisisManagerMenu.9000.9330.name
		trigger = { has_global_flag = CmtFlagDebugMode }
		country_event = { id = CrisisManagerMenu.9330 }
	}

	## Count Guardians of Galaxy
	option = {
		name = CrisisManagerMenu.9000.9340.name
		trigger = { has_global_flag = CmtFlagDebugMode }
		country_event = { id = CrisisManagerMenu.9340 }
	}

	## Separator
	option = {
		name = CmtTextSeparator.name
		custom_tooltip = CmtTextSeparator.tooltip
		trigger = { NOT = { has_global_flag = CmtFlagNoSeparator } }
		allow = { hidden_trigger = { always = no } }
	}

	## FIOS/LIOS Test
	option = {
		name = CrisisManagerMenu.9000.9910.name
		trigger = { has_global_flag = CmtFlagDebugMode }
		country_event = { id = CrisisManagerMenu.9910 }
	}

	## If/Else Test
	option = {
		name = CrisisManagerMenu.9000.9920.name
		trigger = { has_global_flag = CmtFlagDebugMode }
		country_event = { id = CrisisManagerMenu.9920 }
	}

	## Go Back to Main Menu.
	option = {
		name = CmtTextGoBack.name
		country_event = { id = CrisisManagerMenu.0100 }
	}

}

### Variable Checker
country_event = {
	id = CrisisManagerMenu.9100
	title = CrisisManagerMenu.9100.name
	desc = CrisisManagerMenu.9100.desc
	picture = GFX_evt_CmtMenuA
	is_triggered_only = yes

	option = {
		name = CmtTextOK.name
		country_event = { id = CrisisManagerMenu.9000 }
	}
}

### Flag Controller
country_event = {
	id = CrisisManagerMenu.9200
	title = CrisisManagerMenu.9200.name
	desc = CrisisManagerMenu.9200.desc
	picture = GFX_evt_CmtMenuA
	is_triggered_only = yes

	option = {
		name = CrisisManagerMenu.9200.11a.name
		trigger = { NOT = { has_global_flag = galactic_crisis_happened } }
		set_global_flag = galactic_crisis_happened
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.11b.name
		trigger = { has_global_flag = galactic_crisis_happened }
		remove_global_flag = galactic_crisis_happened
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.12a.name
		trigger = { NOT = { has_global_flag = CmtFlagCrisisAllowed_10yr } }
		set_global_flag = CmtFlagCrisisAllowed_10yr
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.12b.name
		trigger = { has_global_flag = CmtFlagCrisisAllowed_10yr }
		remove_global_flag = CmtFlagCrisisAllowed_10yr
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.13a.name
		trigger = { NOT = { has_global_flag = CmtFlagCrisisAllowed_30yr } }
		set_global_flag = CmtFlagCrisisAllowed_30yr
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.13b.name
		trigger = { has_global_flag = CmtFlagCrisisAllowed_30yr }
		remove_global_flag = CmtFlagCrisisAllowed_30yr
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.14a.name
		trigger = { NOT = { has_global_flag = CmtFlagCrisisAllowed_50yr } }
		set_global_flag = CmtFlagCrisisAllowed_50yr
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.14b.name
		trigger = { has_global_flag = CmtFlagCrisisAllowed_50yr }
		remove_global_flag = CmtFlagCrisisAllowed_50yr
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.15a.name
		trigger = { NOT = { has_global_flag = CmtFlagNowInInterval } }
		set_global_flag = CmtFlagNowInInterval
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.15b.name
		trigger = { has_global_flag = CmtFlagNowInInterval }
		remove_global_flag = CmtFlagNowInInterval
		country_event = { id = CrisisManagerMenu.9200 }
	}

	option = {
		name = CmtTextSeparator.name
		custom_tooltip = CmtTextSeparator.tooltip
		trigger = { NOT = { has_global_flag = CmtFlagNoSeparator } }
		allow = { hidden_trigger = { always = no } }
	}

	option = {
		name = CrisisManagerMenu.9200.21a.name
		trigger = { NOT = { has_global_flag = CmtFlagActivated } }
		set_global_flag = CmtFlagActivated
		country_event = { id = CrisisManagerMenu.9200 }
	}
	option = {
		name = CrisisManagerMenu.9200.21b.name
		trigger = { has_global_flag = CmtFlagActivated }
		remove_global_flag = CmtFlagActivated
		country_event = { id = CrisisManagerMenu.9200 }
	}

	option = {
		name = CmtTextSeparator.name
		custom_tooltip = CmtTextSeparator.tooltip
		trigger = { NOT = { has_global_flag = CmtFlagNoSeparator } }
		allow = { hidden_trigger = { always = no } }
	}

	option = {
		name = CmtTextGoBack.name
		custom_tooltip = CmtTextGoBack.tooltip
		hidden_effect = { country_event = { id = CrisisManagerMenu.9000 } }
	}
}

### Count Triggered Crisis
country_event = {
	id = CrisisManagerMenu.9310
	title = CrisisManagerMenu.9310.name
	desc = CrisisManagerMenu.9310.desc
	picture = GFX_evt_CmtMenuA
	is_triggered_only = yes

	option = {
		name = CrisisManagerMenu.9310a.name
		while = {
			count = 10000
			country_event = { id = CrisisManagerControl.0012 }
		}
	}

	option = {
		name = CrisisManagerMenu.9310b.name
		event_target:CmtGlobalVar = {
			set_variable = { which = GmtVarDebugCountTriggerPrethoryn value = 0 }
			set_variable = { which = GmtVarDebugCountTriggerExds value = 0 }
			set_variable = { which = GmtVarDebugCountTriggerContingency value = 0 }
			set_variable = { which = GmtVarDebugCountTriggerForcedEoc value = 0 }
			set_variable = { which = GmtVarDebugCountTriggerNon value = 0 }
		}
	}

	## Separator
	option = {
		name = CmtTextSeparator.name
		custom_tooltip = CmtTextSeparator.tooltip
		trigger = { NOT = { has_global_flag = CmtFlagNoSeparator } }
		allow = { hidden_trigger = { always = no } }
	}

	option = {
		name = CmtTextGoBack.name
		custom_tooltip = CmtTextGoBack.tooltip
		hidden_effect = { set_country_flag = CmtFlagGoBack }
	}

	after = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = CmtFlagGoBack } }
				country_event = { id = CrisisManagerMenu.9310 }
				break = yes
			}
			remove_country_flag = CmtFlagGoBack
			if = {
				limit = { has_country_flag = CmtFlagNowInMenu }
				country_event = { id = CrisisManagerMenu.9000 }
			}
		}
	}
}

### Count Awakening of Sleeper
country_event = {
	id = CrisisManagerMenu.9320
	title = CrisisManagerMenu.9320.name
	desc = CrisisManagerMenu.9320.desc
	picture = GFX_evt_CmtMenuA
	is_triggered_only = yes

	option = {
		name = CrisisManagerMenu.9320a1.name
		every_country = {
			limit = { CmtTriggerIsOrganicSleeper = yes }
			while = {
				count = 10000
				country_event = { id = CrisisManagerControl.5021 }
			}
		}
	}

	option = {
		name = CrisisManagerMenu.9320a2.name
		random_country = {
			limit = { CmtTriggerIsOrganicSleeper = yes }
			while = {
				count = 10000
				country_event = { id = CrisisManagerControl.5021 }
			}
		}
	}

	option = {
		name = CrisisManagerMenu.9320b.name
		event_target:CmtGlobalVar = {
			set_variable = { which = GmtVarDebugCountSleeperAwakened value = 0 }
			set_variable = { which = GmtVarDebugCountSleeperSleeping value = 0 }
		}
	}

	## Separator
	option = {
		name = CmtTextSeparator.name
		custom_tooltip = CmtTextSeparator.tooltip
		trigger = { NOT = { has_global_flag = CmtFlagNoSeparator } }
		allow = { hidden_trigger = { always = no } }
	}

	option = {
		name = CmtTextGoBack.name
		custom_tooltip = CmtTextGoBack.tooltip
		hidden_effect = { set_country_flag = CmtFlagGoBack }
	}

	after = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = CmtFlagGoBack } }
				country_event = { id = CrisisManagerMenu.9320 }
				break = yes
			}
			remove_country_flag = CmtFlagGoBack
			if = {
				limit = { has_country_flag = CmtFlagNowInMenu }
				country_event = { id = CrisisManagerMenu.9000 }
			}
		}
	}
}

### Count Ancient Rival
country_event = {
	id = CrisisManagerMenu.9330
	title = CrisisManagerMenu.9330.name
	desc = CrisisManagerMenu.9330.desc
	picture = GFX_evt_CmtMenuA
	is_triggered_only = yes

	option = {
		name = CrisisManagerMenu.9330a.name
		random_country = {
			limit = { CmtTriggerIsOrganicSleeper = yes }
			save_event_target_as = CmtTargetFirstSleeper
			while = {
				count = 10000
				CmtEffectSelectAncientRival = yes
			}
		}
	}

	option = {
		name = CrisisManagerMenu.9330b.name
		event_target:CmtGlobalVar = {
			set_variable = { which = GmtVarDebugCountAncientRivalOpposite value = 0 }
			set_variable = { which = GmtVarDebugCountAncientRivalRandom value = 0 }
			set_variable = { which = GmtVarDebugCountAncientRivalNon value = 0 }
		}
	}

	## Separator
	option = {
		name = CmtTextSeparator.name
		custom_tooltip = CmtTextSeparator.tooltip
		trigger = { NOT = { has_global_flag = CmtFlagNoSeparator } }
		allow = { hidden_trigger = { always = no } }
	}

	option = {
		name = CmtTextGoBack.name
		custom_tooltip = CmtTextGoBack.tooltip
		hidden_effect = { set_country_flag = CmtFlagGoBack }
	}

	after = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = CmtFlagGoBack } }
				country_event = { id = CrisisManagerMenu.9330 }
				break = yes
			}
			remove_country_flag = CmtFlagGoBack
			if = {
				limit = { has_country_flag = CmtFlagNowInMenu }
				country_event = { id = CrisisManagerMenu.9000 }
			}
		}
	}
}

### Count Guardians of Galaxy
country_event = {
	id = CrisisManagerMenu.9340
	title = CrisisManagerMenu.9340.name
	desc = CrisisManagerMenu.9340.desc
	picture = GFX_evt_CmtMenuA
	is_triggered_only = yes

	option = {
		name = CrisisManagerMenu.9340a.name
		while = {
			count = 10000
			awaken_guardians_of_the_galaxy = yes
		}
	}

	option = {
		name = CrisisManagerMenu.9340b.name
		event_target:CmtGlobalVar = {
			set_variable = { which = GmtVarDebugCountTriggerDualGuardians value = 0 }
			set_variable = { which = GmtVarDebugCountTriggerSingleGuardians value = 0 }
			set_variable = { which = GmtVarDebugCountTriggerNoGuardians value = 0 }
		}
	}

	## Separator
	option = {
		name = CmtTextSeparator.name
		custom_tooltip = CmtTextSeparator.tooltip
		trigger = { NOT = { has_global_flag = CmtFlagNoSeparator } }
		allow = { hidden_trigger = { always = no } }
	}

	option = {
		name = CmtTextGoBack.name
		custom_tooltip = CmtTextGoBack.tooltip
		hidden_effect = { set_country_flag = CmtFlagGoBack }
	}

	after = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = CmtFlagGoBack } }
				country_event = { id = CrisisManagerMenu.9340 }
				break = yes
			}
			remove_country_flag = CmtFlagGoBack
			if = {
				limit = { has_country_flag = CmtFlagNowInMenu }
				country_event = { id = CrisisManagerMenu.9000 }
			}
		}
	}
}

### FIOS/LIOS Test
country_event = {
	id = CrisisManagerMenu.9910
	title = CrisisManagerMenu.9910.name
	desc = CrisisManagerMenu.9910.desc
	picture = GFX_evt_CmtMenuA
	is_triggered_only = yes

	option = {
		name = CmtTextGoBack.name
		custom_tooltip = CmtTextGoBack.tooltip
		hidden_effect = { country_event = { id = CrisisManagerMenu.9000 } }
	}
}

### If/else Structure Test
country_event = {
	id = CrisisManagerMenu.9920
	title = CrisisManagerMenu.9920.name
	desc = CrisisManagerMenu.9920.desc
	picture = GFX_evt_CmtMenuA
	is_triggered_only = yes

	immediate = {
		event_target:CmtGlobalVar = {
			set_variable = { which = CmtVarIfElseCheck value = 0 }
			if = {
				limit = { always = yes }
				if = {
					limit = { always = no }
					change_variable = { which = CmtVarIfElseCheck value = -1000 }
				} else = { change_variable = { which = CmtVarIfElseCheck value = 0.1 } }		## New Structure
			} else = { change_variable = { which = CmtVarIfElseCheck value = -1000 } }
			if = {
				limit = { always = no }
				if = {
					limit = { always = yes }
					change_variable = { which = CmtVarIfElseCheck value = -1000 }
				} else = { change_variable = { which = CmtVarIfElseCheck value = 0.2 } }		## Old Structure
			}

			if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else = { change_variable = { which = CmtVarIfElseCheck value = 4 } }

			if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else = { change_variable = { which = CmtVarIfElseCheck value = 4 } }

			if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else = { change_variable = { which = CmtVarIfElseCheck value = 4 } }

			if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else_if = {
				limit = { always = no }
			} else = { change_variable = { which = CmtVarIfElseCheck value = 4 } }
		}
	}
	option = {
		name = CmtTextGoBack.name
		custom_tooltip = CmtTextGoBack.tooltip
		hidden_effect = { country_event = { id = CrisisManagerMenu.9000 } }
	}
}

### Call Debug Mode from Console.
country_event = {
	id = crisis.9999
	hide_window = yes
	is_triggered_only = yes
	trigger = { always = no }
	immediate = {
		if = { limit = { has_global_flag = CmtFlagDebugMode }
			remove_global_flag = CmtFlagDebugMode
		} else = { set_global_flag = CmtFlagDebugMode }
	}
}
