##########################################
##########################################
#####                                #####
#####    Crisis Manager              #####
#####                                #####
#####    Scripted Effects to         #####
#####    Set Auxiliary Parameters    #####
#####                                #####
##########################################
##########################################
#
# Information
#	All script in this file require following scopes
#	this = fleet
#	prev = owner country
#	prevprev = location for spawning fleet
#
#

###################
###  Constants  ###
###################


##############
###  Khan  ###
##############

CmtFleetSetAuxParam_KhanCombat = {
	set_location = {
		target = prevprev
		distance = 45
		angle = random
	}
}

CmtFleetSetAuxParam_KhanEncourager = {
	set_formation_scale = 2
	set_fleet_stance = aggressive
	set_aggro_range_measure_from = self
	set_aggro_range = 250
	set_location = {
		target = prevprev
		distance = 20
		angle = random
	}
}

CmtFleetSetAuxParam_KhanAuxiliary = {
	set_location = {
		target = prevprev
		distance = 20
		angle = random
	}
}


#################
###  Dessanu  ###
#################

CmtFleetSetAuxParam_DessanuGarryson = {
	set_formation_scale = 2
	set_fleet_stance = aggressive
	set_aggro_range_measure_from = self
	set_aggro_range = 250
	set_location = {
		target = prevprev
		distance = 15
		angle = random
	}
}

CmtFleetSetAuxParam_DessanuRoamerCommon = {
	set_formation_scale = 2
	set_fleet_stance = aggressive
	set_aggro_range_measure_from = self
	set_aggro_range = 500
	set_location = {
		target = prevprev
		distance = 0
		angle = random
	}
}

### For Roamers: 			set_location = event_target:start_x (x = \d)
CmtFleetSetAuxParam_DessanuRoamer = {
	random_system_planet = {
		limit = { is_planet_class = pc_gray_goo } # get changed after to pc_gaia
		last_created_fleet = {
			set_location = prev
			queue_actions = {
				repeat = {
					find_random_system = {
						trigger = {
							id = dessanu_roamers_$NUM$.trigger.1
							has_star_flag = lcluster
						}
						found_system = {
							move_to = THIS
							find_random_planet = {
								trigger = {
									id = dessanu_roamers_$NUM$.trigger.3
									is_star = yes
									exists = starbase
								}
								found_planet = {
									orbit_planet = THIS
									move_to = THIS.starbase
									wait = {
										duration = 60
										random = 30
									}
								}
								failed = {
									find_random_planet = {
										trigger = {
											id = dessanu_roamers_$NUM$.failed
											is_star = yes
										}
										found_planet = {
											orbit_planet = THIS
											wait = {
												duration = 30
												random = 15
											}
										}
									}
								}
							}
						}
					}
					find_closest_planet = {
						trigger = {
							id = dessanu_roamers_$NUM$.trigger.2
							OR = {
								is_planet_class = "pc_gray_goo"
								is_planet_class = "pc_gaia"
							}
						}
						found_planet = {
							orbit_planet = THIS
							wait = {
								duration = 60
								random = 30
							}
						}
					}
				}
			}
		}
	}
}

#################
###  Graygoo  ###
#################

CmtFleetSetAuxParam_GraygooGarryson = {
	set_formation_scale = 2
	set_fleet_stance = aggressive
	set_aggro_range_measure_from = self
	set_aggro_range = 250
	set_location = {
		target = prevprev
		distance = 15
		angle = random
	}
}

CmtFleetSetAuxParam_GraygooAttacker = {
	set_formation_scale = 2
	set_fleet_stance = aggressive
	set_aggro_range_measure_from = self
	set_aggro_range = 250
	set_location = {
		target = prevprev
		distance = 0
		angle = random
	}
}


### For Roamers: 	set_location = event_target:start_x (x = \d)
CmtFleetSetAuxParam_GraygooRoamer = {
	random_system_planet = {
		limit = { is_planet_class = pc_gray_goo }
		last_created_fleet = {
			set_location = prev
			queue_actions = {
				repeat = {
					find_random_system = {
						trigger = {
							id = graygoo_roamers_$NUM$.trigger.1
							has_star_flag = lcluster
						}
						found_system = {
							move_to = THIS
							find_random_planet = {
								trigger = {
									id = graygoo_roamers_$NUM$.trigger.3
									is_star = yes
								}
								found_planet = {
									orbit_planet = THIS
									wait = {
										duration = 30
										random = 15
									}
								}
							}
						}
					}
					find_closest_planet = {
						trigger = {
							id = graygoo_roamers_$NUM$.trigger.2
							is_planet_class = "pc_gray_goo"
						}
						found_planet = {
							orbit_planet = THIS
							effect = {
								id = graygoo_roamers_$NUM$.trigger.4
								root.fromfrom = { random_owned_ship = { repair_ship = yes } }
							}
							wait = {
								duration = 60
								random = 30
							}
						}
					}
				}
			}
		}
	}
}

CmtFleetSetAuxParam_Roamer = {
	# set_location = prev
	queue_actions = {
		repeat = {
			find_random_system = {
				trigger = {
					id = graygoo_roamers_$NUM$.trigger.1
					has_star_flag = lcluster
				}
				found_system = {
					move_to = THIS
					find_random_planet = {
						trigger = {
							id = graygoo_roamers_$NUM$.trigger.3
							is_star = yes
						}
						found_planet = {
							orbit_planet = THIS
							wait = {
								duration = 30
								random = 15
							}
						}
					}
				}
			}
			find_closest_planet = {
				trigger = {
					id = graygoo_roamers_$NUM$.trigger.2
					OR = {
						is_planet_class = "pc_gray_goo"
						is_planet_class = "pc_gaia"
					}
				}
				found_planet = {
					orbit_planet = THIS
					effect = {
						id = graygoo_roamers_$NUM$.trigger.4
						root.fromfrom = { random_owned_ship = { repair_ship = yes } }
					}
					wait = {
						duration = 60
						random = 30
					}
				}
			}
		}
	}
}